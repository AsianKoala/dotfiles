ncmpcpp_directory = "~/.config/ncmpcpp"
lyrics_directory = "~/.lyrics"
mpd_host = "127.0.0.1"
mpd_port = "6600"
mpd_music_dir = "~/music"
mpd_crossfade_time = "5"
mpd_connection_timeout = "5"
visualizer_data_source = "/tmp/mpd.fifo"
visualizer_output_name = "my_fifo"
visualizer_in_stereo = "yes"
visualizer_type = "spectrum"
visualizer_look = "+|"
#user_interface = "alternative"
#alternative_header_first_line_format = "$(11) █▓▒░ $b$(13)%a$(end)$/b ░▒▓█$(end)"
#alternative_header_second_line_format = "$(4)%t (%y)$(end)"
##alternative_ui_separator_color = 6
#colors_enabled = yes
#main_window_color = 6
#
#empty_tag_color = cyan
#
#header_window_color = default
#
#volume_color = default
#
#state_line_color = default
#
#state_flags_color = default:b
#
##main_window_color = 6
#
#color1 = white
#
#color2 = 6 
#
#progressbar_color = black:b
#
#progressbar_elapsed_color = blue
#
#statusbar_color = 6
#
#statusbar_time_color = 6
#
#player_state_color = 6
#
#alternative_ui_separator_color = black:b
#
#window_border_color = magenta
#
#active_window_border = 6









# GENERAL
# ---
external_editor                  = nvim
message_delay_time               = 1
playlist_disable_highlight_delay = 2
autocenter_mode                  = "yes"
centered_cursor                  = "yes"
ignore_leading_the               = "yes"
allow_for_physical_item_deletion = "no"
connected_message_on_startup = "yes"
cyclic_scrolling = "yes"
mouse_support = "yes"
mouse_list_scroll_whole_page = "yes"
lines_scrolled = "1"
playlist_shorten_total_times = "yes"
playlist_display_mode = "columns"
browser_display_mode = "columns"
search_engine_display_mode = "columns"
playlist_editor_display_mode = "columns"
user_interface = "classic"
follow_now_playing_lyrics = "yes"
display_bitrate = "no"
startup_screen = "playlist"

# VISUALIZER
# ---
#visualizer_data_source = "/tmp/mpd.fifo"
#visualizer_output_name = "my_fifo"
#visualizer_in_stereo = "no"
#visualizer_sync_interval = "30"
#visualizer_type = "ellipse"
#visualizer_fps = "60"
#visualizer_look = ●▮
#visualizer_color = "33,39,63,75,81,99,117,153,189"

# PROGRESS BAR
# ---
/* progressbar_look = "   " */
/* progressbar_color = "black" */
/* progressbar_elapsed_color = "yellow" */
progressbar_color = "black"
progressbar_elapsed_color = "magenta"

# COLORS
# ---
main_window_color = "magenta"
color1 = "white"
color2 = "magenta"

# UI VISIBILITY
# ---
header_visibility = "yes"
statusbar_visibility = "yes"
titles_visibility = "yes"

# UI APPEARANCE
# ---
#now_playing_prefix = "$b$8$7 "
#now_playing_suffix = "  $/b$8"
#current_item_prefix = "$b$7$/b$3 "
#current_item_suffix = "  $8"
#song_status_format= "$7%t"
#song_list_format = "$8%a - %t$R  %l"
#song_columns_list_format = "(15)[white]{tr} (60)[blue]{a}"
#song_library_format = {{%a - %t} (%b)}|{%f}
#song_window_title_format = "Music"



##### song format #####
##
## For a song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## If you want to make sure that a part of the format is displayed only when
## certain tags are present, you can archieve it by grouping them with brackets,
## e.g. '{%a - %t}' will be evaluated to 'ARTIST - TITLE' if both tags are
## present or '' otherwise.  It is also possible to define a list of
## alternatives by providing several groups and separating them with '|',
## e.g. '{%t}|{%f}' will be evaluated to 'TITLE' or 'FILENAME' if the former is
## not present.
##
## Note: If you want to set limit on maximal length of a tag, just put the
## appropriate number between % and character that defines tag type, e.g. to
## make album take max. 20 terminal cells, use '%20b'.
##
## In addition, formats support markers used for text attributes.  They are
## followed by character '$'. After that you can put:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use a non-color attribute anymore, just put it again,
## but this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename with
## reversed colors.
##
## If you want to use 256 colors and/or background colors in formats (the naming
## scheme is described below in section about color definitions), it can be done
## with the syntax $(COLOR), e.g. to set the artist tag to one of the
## non-standard colors and make it have yellow background, you need to write
## $(197_yellow)%a$(end). Note that for standard colors this is interchangable
## with attributes listed above.
##
## Note: colors can be nested.
##
#
#song_list_format = {%a - }{%t}|{$8%f$9}$R{$3%l$9}
#
#song_status_format = {{%a{ "%b"{ (%y)}} - }{%t}}|{%f}
#
#song_library_format = {%n - }{%t}|{%f}
#
#alternative_header_first_line_format = $b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b
#
#alternative_header_second_line_format = {{$4$b%a$/b$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}
#
#current_item_prefix = $(yellow)$r
#
#current_item_suffix = $/r$(end)
#
#current_item_inactive_column_prefix = $(white)$r
#
#current_item_inactive_column_suffix = $/r$(end)
#
#now_playing_prefix = $b
#
#now_playing_suffix = $/b
#
#browser_playlist_prefix = "$2playlist$9 "
#
#selected_item_prefix = $6
#
#selected_item_suffix = $9
#
#modified_item_prefix = $3> $9
#
##
## Note: attributes are not supported for the following variables.
##
#song_window_title_format = {%a - }{%t}|{%f}
##
## Note: Below variables are used for sorting songs in browser.  The sort mode
## determines how songs are sorted, and can be used in combination with a sort
## format to specify a custom sorting format.  Available values for
## browser_sort_mode are "type", "name", "mtime", "format" and "none".
##
#
#browser_sort_mode = type
#
#browser_sort_format = {%a - }{%t}|{%f} {%l}
#
##### columns settings #####
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of the column)[color of the column]{displayed tag}
##
## Note: Width is by default in %, if you want a column to have fixed size, add
## 'f' after the value, e.g. (10)[white]{a} will be the column that take 10% of
## screen (so the real width will depend on actual screen size), whereas
## (10f)[white]{a} will take 10 terminal cells, no matter how wide the screen
## is.
##
## - color is optional (if you want the default one, leave the field empty).
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes, separated with
##   character ':', e.g. {lr:Length} gives you right aligned column of lengths
##   named "Length".
##
## - define sequence of tags, that have to be displayed in case predecessor is
##   empty in a way similar to the one in classic song format, i.e. using '|'
##   character, e.g. {a|c|p:Owner} creates column named "Owner" that tries to
##   display artist tag and then composer and performer if previous ones are not
##   available.
##
#
song_columns_list_format = (20)[]{a} (50)[white]{t|f:Title} (20)[cyan]{b} (7f)[magenta]{l}


